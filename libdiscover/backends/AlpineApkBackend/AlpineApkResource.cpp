/***************************************************************************
 *   Copyright Â© 2020 Alexey Min <alexey.min@gmail.com>                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or         *
 *   modify it under the terms of the GNU General Public License as        *
 *   published by the Free Software Foundation; either version 2 of        *
 *   the License or (at your option) version 3 or any later version        *
 *   accepted by the membership of KDE e.V. (or its successor approved     *
 *   by the membership of KDE e.V.), which shall act as a proxy            *
 *   defined in Section 14 of version 3 of the license.                    *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 ***************************************************************************/

#include <KRandom>
#include "AlpineApkResource.h"
#include "alpineapk_backend_logging.h"  // generated by ECM
#include "Transaction/AddonList.h"

AlpineApkResource::AlpineApkResource(const QtApk::Package &apkPkg,
                                     AbstractResourcesBackend *parent)
    : AbstractResource(parent)
    , m_state(AbstractResource::State::None)
    , m_type(Application)
    , m_pkg(apkPkg)
{
}

QList<PackageState> AlpineApkResource::addonsInformation()
{
    return m_addons;
}

QString AlpineApkResource::availableVersion() const
{
    return m_pkg.version;
}

QStringList AlpineApkResource::categories()
{
    return { m_category };
}

QString AlpineApkResource::comment()
{
    return m_pkg.description;
}

int AlpineApkResource::size()
{
    return static_cast<int>(m_pkg.size);
}

QUrl AlpineApkResource::homepage()
{
    return QUrl::fromUserInput(m_pkg.url);
}

QUrl AlpineApkResource::helpURL()
{
    return QUrl();
}

QUrl AlpineApkResource::bugURL()
{
    return QUrl();
}

QUrl AlpineApkResource::donationURL()
{
    return QUrl();
}

QVariant AlpineApkResource::icon() const
{
    return QStringLiteral("package-x-generic");
}

QString AlpineApkResource::installedVersion() const
{
    return m_pkg.version;
}

QJsonArray AlpineApkResource::licenses()
{
    return {
        QJsonObject {
            { QStringLiteral("name"), m_pkg.license },
            { QStringLiteral("url"), QStringLiteral("https://spdx.org/license-list") },
        }
    };
}

QString AlpineApkResource::longDescription()
{
    return m_pkg.description;
}

QString AlpineApkResource::name() const
{
    return m_pkg.name;
}

QString AlpineApkResource::origin() const
{
    return m_originSoruce;
}

QString AlpineApkResource::packageName() const
{
    return m_pkg.name;
}

QString AlpineApkResource::section()
{
    return m_sectionName;
}

AbstractResource::State AlpineApkResource::state()
{
    return m_state;
}

void AlpineApkResource::fetchChangelog()
{
    // QString log = longDescription();
    // Q_EMIT changelogFetched(log);
}

void AlpineApkResource::fetchScreenshots()
{
    // Q_EMIT screenshotsFetched(m_screenshotThumbnails, m_screenshots);
}

void AlpineApkResource::setState(AbstractResource::State state)
{
    m_state = state;
    emit stateChanged();
}

void AlpineApkResource::setCategoryName(const QString &categoryName)
{
    m_category = categoryName;
}

void AlpineApkResource::setOriginSource(const QString &originSource)
{
    m_originSoruce = originSource;
}

void AlpineApkResource::setSection(const QString &sectionName)
{
    m_sectionName = sectionName;
}

void AlpineApkResource::setAddons(const AddonList &addons)
{
    const QStringList addonsToInstall = addons.addonsToInstall();
    for (const QString &toInstall : addonsToInstall) {
        setAddonInstalled(toInstall, true);
    }
    const QStringList addonsToRemove = addons.addonsToRemove();
    for (const QString &toRemove : addonsToRemove) {
        setAddonInstalled(toRemove, false);
    }
}

void AlpineApkResource::setAddonInstalled(const QString &addon, bool installed)
{
    for(PackageState &elem : m_addons) {
        if(elem.name() == addon) {
            elem.setInstalled(installed);
        }
    }
}


void AlpineApkResource::invokeApplication() const
{
    // QDesktopServices d;
    // d.openUrl(QUrl(QStringLiteral("https://projects.kde.org/projects/extragear/sysadmin/muon")));
}

QUrl AlpineApkResource::url() const
{
    return QUrl(QLatin1String("apk://") + packageName());
}

QString AlpineApkResource::author() const
{
    return m_pkg.maintainer;
}

QString AlpineApkResource::sourceIcon() const
{
    return QStringLiteral("player-time");
}

QDate AlpineApkResource::releaseDate() const
{
    return m_pkg.buildTime.date();
}
